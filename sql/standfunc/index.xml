<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Стандарные функции on Учебник Oracle SQL, PL/SQL</title><link>https://orasql.ru/sql/standfunc/</link><description>Recent content in Стандарные функции on Учебник Oracle SQL, PL/SQL</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://orasql.ru/sql/standfunc/index.xml" rel="self" type="application/rss+xml"/><item><title>Функции для работы со строками</title><link>https://orasql.ru/sql/standfunc/stringfunctions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://orasql.ru/sql/standfunc/stringfunctions/</guid><description>Создадим тестовую таблицу.
create table articles( title varchar2(50) not null, author varchar2(50) not null, msg varchar2(300) not null, publish_date date not null ); comment on table articles is 'Твиты'; comment on column articles.title is 'Заголовок'; comment on column articles.author is 'Автор'; comment on column articles.msg is 'Сообщение'; insert into articles values ('Новый фотоаппарат!', 'johndoe', 'Сегодня купил себе новый фотоаппарат. Надеюсь, у меня будут получаться отличные фотографии!', sysdate); insert into articles values ('Насобирал денег', 'johndoe', 'Целый год я шел к этой цели, и вот наконец-то у меня все получилось, и заветная сумма собрана!</description></item><item><title>Функции для работы с NULL</title><link>https://orasql.ru/sql/standfunc/nullfunctions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://orasql.ru/sql/standfunc/nullfunctions/</guid><description>Так как NULL - особое значение, то он удостоился отдельных функций в Oracle, которые умеют работать с ним &amp;ldquo;из коробки&amp;rdquo;.
Подготовка тестовых данных Работать будем со следующей таблицей:
create table profiles( login varchar2(30) primary key, last_updated date, status varchar2(50) ); comment on table profiles is 'Профили форума'; comment on column profiles.last_updated is 'Дата последнего обновления'; comment on column profiles.status is 'Статус'; insert into profiles(login, last_updated, status) values ('johndoe', to_date('01.01.2009 23:40', 'dd.</description></item><item><title>Условные функции</title><link>https://orasql.ru/sql/standfunc/conditional/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://orasql.ru/sql/standfunc/conditional/</guid><description>Условные функции - это такие функции, которые могут возвращать разные результаты в зависимости от выполнения тех или иных условий.
В качестве тестовых данным будем использовать таблицу из части про функции для работы с NULL.
DECODE Функция DECODE в общем случае имеет следующий вид:
DECODE(что сравниваем, значение1, результат1, значение2, результат2, значение3, результат3, .... значениеN, результатN, значение по-умолчанию) Первым DECODE принимает параметр, значение которого будет сравниваться по очереди со списком значений, и в случае, когда он совпадет с одним из перечисленных, будет возвращен соответствующий результат.</description></item><item><title>Битовые операции</title><link>https://orasql.ru/sql/standfunc/bit/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://orasql.ru/sql/standfunc/bit/</guid><description>Битовые операции при работе с БД применяются редко. Тем не менее, работа с отдельными битами поддерживается в БД Oracle, и в некоторых случаях может быть использована в весьма элегантном виде.
Тестовые данные create table docs( id number not null primary key, doc_num varchar2(100 char) not null, bit_access number default 0 not null ); comment on table docs is 'Документы'; comment on column docs.bit_access is 'Уровни доступа(1 бит - чтение, 2 - редактирование, 3 - удаление)'; insert into docs values(1, '1-1', 0); insert into docs values(2, '2-1', 1); insert into docs values(3, '2-2', 4); insert into docs values(4, '3-1', 3); insert into docs values(5, '4-1', 7); Колонка bit_access хранит в себе число, каждый бит которого отвечает за наличие(1) или отсутствие(0) доступа на произведение операций с данной строкой таблицы(документом).</description></item><item><title>Агрегирующие функции</title><link>https://orasql.ru/sql/standfunc/aggregation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://orasql.ru/sql/standfunc/aggregation/</guid><description>Агрегирующие функции - это такие функции, которые выполняются не для каждой строки отдельно, а для определенных групп данных.
Подготовка данных create table employees( id number not null, first_name varchar2(50 char) not null, last_name varchar2(100 char), bd date not null, job varchar2(100) ); insert into employees values(1, 'Василий', 'Петров', to_date('07.10.1990', 'dd.mm.yyyy'), 'Машинист'); insert into employees values(2, 'Александр', 'Сидоров', to_date('18.07.1980', 'dd.mm.yyyy'), 'Бухгалтер'); insert into employees values(3, 'Евгения', 'Цветочкина', to_date('18.07.1978', 'dd.mm.yyyy'), 'Бухгалтер'); insert into employees values(4, 'Владимир', 'Столяров', to_date('18.</description></item><item><title>Работа с датами в Oracle</title><link>https://orasql.ru/sql/standfunc/datefunctions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://orasql.ru/sql/standfunc/datefunctions/</guid><description>В БД Oracle для работы с датами предназначены 2 типа - DATE и TIMESTAMP.
Отдельно можно упомянуть INTERVAL - интервальный тип, который хранит диапазон между двумя датами.
Тип DATE Тип DATE используется чаще всего, когда необходимо работать с датами в БД Oracle. Он позволяет хранить даты с точностью до секунд.
Некоторые БД, например MySQL, также имеют тип DATE, но там может храниться дата лишь с точностью до дня.
Приведение строки к дате Одна из часто встречающихся ситуаций - необходимость представить строку в виде типа данных DATE.</description></item><item><title>Аналитические функции</title><link>https://orasql.ru/sql/standfunc/analytics/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://orasql.ru/sql/standfunc/analytics/</guid><description>Аналитические функции - очень мощный инструмент в SQL. Со слов Тома Кайта, можно написать отдельную книгу по аналитическим функциям, настолько они полезны.
Аналитические функции - это те же агрегирующие функции, но их главная особенность в том, что они работают без необходимости группировки строк.
Аналитические функции выполняются последними в запросе, поэтому они могут быть использованы только в SELECT части запроса, либо в ORDER BY.
Для примера возьмем данные, которые мы использовали при разборе агрегирующих функций:</description></item></channel></rss>