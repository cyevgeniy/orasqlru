<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Объекты БД on Учебник Oracle SQL, PL/SQL</title><link>http://orasql.ru/sql/dbobjects/</link><description>Recent content in Объекты БД on Учебник Oracle SQL, PL/SQL</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="http://orasql.ru/sql/dbobjects/index.xml" rel="self" type="application/rss+xml"/><item><title>Первичные ключи</title><link>http://orasql.ru/sql/dbobjects/primarykeys/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://orasql.ru/sql/dbobjects/primarykeys/</guid><description>Рассмотрим следующую ситуацию: пусть у нас есть 2 таблицы. Первая содержит список сотрудников, вторая - размер бонусов к зарплате для какой-то части этих сотрудников.
В жизни есть определенная вероятность того, что двух разных людей могут звать одинаково. Так вышло и у нас - 2 абсолютно разных сотрудника имеют одинаковое имя - &amp;ldquo;Алексей Иванов&amp;rdquo;.
Предположим, что мы хотим одному из них начислить бонус в размере 200$. Глядя на список сотрудников с бонусами, можем ли мы сказать, какому именно Алексею Иванову мы должны начислить бонус в размере 200$?</description></item><item><title>Внешние ключи</title><link>http://orasql.ru/sql/dbobjects/foreignkeys/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://orasql.ru/sql/dbobjects/foreignkeys/</guid><description>Рассмотрим пример из части про первичные ключи.
У нас было две таблицы - список сотрудников и единовременные бонусы для них. С помощью первичного ключа в таблице сотрудников мы решили проблему соотношения между бонусами и сотрудниками.
Схематично наши таблицы выглядят вот так:
Благодаря наличию первичного ключа мы однозначно можем сказать, какому сотруднику какой бонус начисляется.
А теперь посмотрим на следующую ситуацию: в таблицу bonuses добавляется запись со значением emp_id, которому нет соответствия в таблице сотрудников.</description></item><item><title>Уникальные ключи</title><link>http://orasql.ru/sql/dbobjects/uniquekeys/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://orasql.ru/sql/dbobjects/uniquekeys/</guid><description>Возьмем нашу таблицу с сотрудниками и добавим туда колонку с номером паспорта сотрудника. Может ли у двух разных людей быть одинаковый номер паспорта? Однозначно нет. Если в наших данных возникнет такая ситуация, когда у нескольких сотрудников по ошибке указали один и тот же номер паспорта, это может обернуться серьезными ошибками - клиентская программа выдаст по поиску несколько записей вместо одной, либо вообще выдаст ошибку и закроется. Или в бухгалтерии переведут деньги не тому сотруднику, или наоборот, всем.</description></item><item><title>Представления</title><link>http://orasql.ru/sql/dbobjects/views/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://orasql.ru/sql/dbobjects/views/</guid><description>Что такое представления Представления(Views) - это такой объект в БД, который:
Выглядит как таблица Внутри себя содержит SQL запрос, которым заменяется таблица при обращении к ней. Во многом представления работают также, как и обычные таблицы. В них можно(правда с определенными ограничениями) вставлять, изменять и удалять данные.
Создание представлений Общий синтаксис создания представления следующий:
create view viewname as select ... .... ....; Т.е. для создания представления достаточно написать запрос, который возвращать нужные данные.</description></item><item><title>Индексы</title><link>http://orasql.ru/sql/dbobjects/indexes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://orasql.ru/sql/dbobjects/indexes/</guid><description>Что такое индексы Индексы - это специальные объекты в БД, которые хранят в себе записи для каждого встречающегося в индексированной колонке значения. Внутреннее устройство индексов таково, что они позволяют быстро находить строки в таблице, содержащие определенные значения.
Чтобы лучше понять как работает индекс и для чего он нужен, представьте телефонный справочник, в котором абоненты расположены в случайном порядке. Чтобы найти нужного абонента, придется просматривать все записи в справочнике по порядку до тех пор, пока не встретится нужный.</description></item><item><title>Виртуальные колонки</title><link>http://orasql.ru/sql/dbobjects/virtualcolumns/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://orasql.ru/sql/dbobjects/virtualcolumns/</guid><description>Создание виртуальных колонок Виртуальные колонки были добавлены в 11 версии Oracle.
Виртуальные колонки - это колонки, которые вычисляются на основе других колонок таблицы. Например:
create table cars( id number primary key, model varchar2(100) not null, engine_volume number, max_speed_km number not null, max_speed_ml generated always as (max_speed_km / 1.609)); comment on column cars.max_speed_km is 'Максимальная скорость, км/ч'; comment on column cars.max_speed_ml is 'Максимальная скорость, миль/ч'; Здесь максимальная скорость в милях вычисляется на основании данных о максимальной скорости автомобиля в километрах.</description></item><item><title>Псевдостолбцы в Oracle</title><link>http://orasql.ru/sql/dbobjects/pseudocolumns/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://orasql.ru/sql/dbobjects/pseudocolumns/</guid><description>К псевдостолбцам можно относиться как к обычным колонкам в таблице, за тем лишь исключением, что данные, которые они представляют, в таблице не хранятся.
Некоторые псевдостолбцы доступны только в определенном контексте, например, лишь при использовании рекурсивных запросов.
Мы рассмотрим не все псевдостолбцы, доступны в Oracle, а лишь самые основные и часто используемые. Полный их список и описание можно почитать в докумениации.
Мы будем использовать таблицу dishes, которая создается в части про операторы сравнения.</description></item></channel></rss>